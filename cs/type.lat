@DisableCompilerChecks 
ADT Definition Module Type 
model   org.inca.sa.inter.test.cs    imports     nothing


                        Constructors: String | Integer | Boolean | Wrapper(node<Classifier

                        Operations:                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            

                        def unwrapClassifier(type : Type) : node<Classifier> = { 
  match type with { 
    case Wrapper(c) => return c; 
    case _ => return null; 
  }; 
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                        def asClassifier(type : Type) : node<Classifier> = { 
  match type with { 
    case String => return node/String/; 
    case Boolean => return node/Boolean/; 
    case Integer => return node/Integer/; 
    case Wrapper(c) => return c; 
  }; 
}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    

                        def isSubType(sub : Type, sup : Type) : boolean = { 
  return isSubClassifier(asClassifier(sub), asClassifier(sup)); 
}

                        def isSubClassifier(sub : node<Classifier>, sup : node<Classifier>) : boolean = { 
  if (Objects.equals(sub, sup)) { 
    return true; 
  } else if (sub.isInstanceOf(ClassConcept)) { 
    final node<ClassConcept> clazz = sub as ClassConcept; 
    if (isSubClassifier(clazz.superclass.classifier, sup)) { return true; } 
    foreach _implement in clazz.implementedInterface { 
      if (isSubClassifier(_implement.classifier, sup)) { return true; } 
    } 
    return false; 
  } else if (sub.isInstanceOf(Interface)) { 
    foreach _extend in sub:Interface.extendedInterface { 
      if (isSubClassifier(_extend.classifier, sup)) { return true; } 
    } 
    return false; 
  } else { 
    return false; 
  } 
}
